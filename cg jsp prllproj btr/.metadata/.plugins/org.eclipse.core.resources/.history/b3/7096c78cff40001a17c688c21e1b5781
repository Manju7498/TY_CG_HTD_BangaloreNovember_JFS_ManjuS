package com.cg.forestrymanagementjdbc.dao;

import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.Scanner;

import com.cg.forestrymanagementjdbc.bean.OrderBean;
import com.cg.forestrymanagementjdbc.exceptions.ForestryExceptions;

public class OrderDaoImpl implements OrderDao {
	FileReader reader;
	Properties prop;
	OrderBean bean;
	Scanner sc = new Scanner(System.in);

	public OrderDaoImpl() {
		try {
			reader = new FileReader("forestrydatabasemanagement.properties");
			prop = new Properties();
			prop.load(reader);
			Class.forName(prop.getProperty("driverClass"));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}

	@Override
	public List<OrderBean> getAllOrders() {
		List<OrderBean> list = new ArrayList<OrderBean>();
		try (Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				Statement stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(prop.getProperty("allOrdersQuery"));) {
			while (rs.next()) {
				bean = new OrderBean();
				bean.setOrderNo(rs.getInt(1));
				bean.setCustomerId(rs.getInt(2));
				bean.setProductId(rs.getInt(3));
				bean.setHaulierId(rs.getInt(4));
				bean.setDeliveryDate(rs.getString(5));
				bean.setQuantity(rs.getInt(6));
				list.add(bean);
				return list;
			}
		} catch (Exception e) {
			throw new ForestryExceptions();
		}
		return null;
	}

	@Override
	public OrderBean orderLogin(int orderNo) {
		try (Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("loginOrderQuery"))) {
			pstmt.setInt(1, orderNo);
			ResultSet rs = pstmt.executeQuery();
			if (rs.next()) {
				bean = new OrderBean();
				bean.setOrderNo(rs.getInt(1));
				bean.setCustomerId(rs.getInt(2));
				bean.setProductId(rs.getInt(3));
				bean.setHaulierId(rs.getInt(4));
				bean.setDeliveryDate(rs.getString(5));
				bean.setQuantity(rs.getInt(6));
				return bean;
			}

		} catch (Exception e) {
			throw new ForestryExceptions();
		}
		return null;
	}

	@Override
	public boolean updateOrder(int orderNo, OrderBean bean) {
		try (Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("updateCustomerIdQuery"));) {
			pstmt.setInt(1, bean.getCustomerId());
			pstmt.setInt(2, bean.getProductId());
			pstmt.setInt(3, orderNo);
			int count = pstmt.executeUpdate();
			if (count > 0) {
				return true;
			}
		} catch (Exception e) {
			throw new ForestryExceptions();
		}
		return false;
	}

	@Override
	public boolean deleteOrder(int orderNo) {
		try (Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("deleteOrderQuery"));) {
			pstmt.setInt(1, orderNo);
			int count = pstmt.executeUpdate();
			if (count > 0) {
				return true;
			}
		} catch (Exception e) {
			throw new ForestryExceptions();
		}
		return false;
	}

	@Override
	public boolean insertOrder(OrderBean bean) {
		try (Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("insertOrderQuery"));

		) {
			pstmt.setInt(1, bean.getOrderNo());
			pstmt.setInt(2, bean.getCustomerId());
			pstmt.setInt(3, bean.getProductId());
			pstmt.setInt(4, bean.getHaulierId());
			pstmt.setString(5, bean.getDeliveryDate());
			pstmt.setInt(6, bean.getQuantity());
			int count = pstmt.executeUpdate();
			if (count > 0) {
				return true;
			}
		} catch (Exception e) {
			throw new ForestryExceptions();
		}
		return false;
	}
}
